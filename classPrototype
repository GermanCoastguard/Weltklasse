
/* This Class was meant to be a ActionButton */
export class YourClass{
      constructor(actionType) {
            this.actionType= actionType;
            // this.reqiurements wird primär für this._debug() verwendet. Falls in Erwägung gezogen wird, Werte aus this.requirements in anderen Methoden anzuwenden, berücksichten dass this._debug nicht mehr wie gewünscht funktioniert.
            this.requirements = {
                  actionType: { value: this.actionType, intention: " required to determine, which function gets called" },
                 },

                  this._init(actionType);
      }



      _init(actionType) {
            this._debug();
            return;
            if (!actionType) {
                  return;
            } else {
                  console.clear();
                  console.log("attr action-type ist vergeben.")
            }
      }
      _returnValue(actionType) {
            // Soll eine Funktion triggern , basierend auf dem actiontype
      }
      _debug(obj = this.requirements) {
            console.clear();
            console.log(this);
            console.log(`
              Console was cleared => 
                            Starting debugging
            
            `);
            // __________________ Working as Intended Start __________________
            const handleRequirements = () => {
                  // Prüfe ob reqiurements vergeben wurden
                  if (!obj) {
                        return console.log(`
                  handleRequirements() wird gerade ausgeführt => 

                  Es sind keine [Requirements] definiert.
                  (Falls keine Requirements definiert werden sollen muss als Arg ein Leeres Object übergeben werden )
                 
                  
                  `);
                  }
                  // Ausgehend davon, dass die Elemente in this.requirements Key,Value pairs sind.
                  const requirements = Object.entries(obj);
                  let count = 0;
                  for (const [key, val] of requirements) {
                        count++
                        console.log(`
                    
      "requirement ${count} of ${requirements.length} =>  ${key} = ${val.value}"

      ( ${val.intention })
                  
                  `);
                  }
            }
            // __________________ Working as Intended End __________________
            handleRequirements();
      }
}
